name: windows

on: [push, pull_request]

jobs:

  Build:
    name: ${{matrix.name}} (${{matrix.config}})
    runs-on: ${{matrix.os}}

    env:
      CMAKE_GENERATOR: Ninja

    strategy:
      fail-fast: false
      matrix:
        name: [
          windows-2019-msvc2019,
          windows-2019-msvc2019-win32,
          windows-2019-msvc2019-arm64,
          windows-2019-msvc2019-clang,
          windows-2022-msvc2022,
          windows-2022-msvc2022-win32,
          windows-2022-msvc2022-arm64,
          windows-2022-msvc2022-clang
        ]
        config: [Debug, Release]
        include:
          - name: windows-2019-msvc2019
            os: windows-2019
            compiler: cl
            architecture: x64

          - name: windows-2019-msvc2019-win32
            os: windows-2019
            compiler: cl
            architecture: x86

          - name: windows-2019-msvc2019-arm64
            os: windows-2019
            compiler: cl
            architecture: x64_arm64

          - name: windows-2019-msvc2019-clang
            os: windows-2019
            compiler: clang-cl
            architecture: x64

          - name: windows-2022-msvc2022
            os: windows-2022
            compiler: cl
            architecture: x64

          - name: windows-2022-msvc2022-win32
            os: windows-2022
            compiler: cl
            architecture: x86

          - name: windows-2022-msvc2022-arm64
            os: windows-2022
            compiler: cl
            architecture: x64_arm64

          - name: windows-2022-msvc2022-clang
            os: windows-2022
            compiler: clang-cl
            architecture: x64

    steps:
      - uses: actions/checkout@v3
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{matrix.architecture}}

      - name: Cache Dependencies
        id: cache-choco
        uses: actions/cache@v3
        env:
          cache-name: cache-choco-packages
        with:
          path: C:/Users/runneradmin/AppData/Local/Temp/chocolatey
          key: ${{env.cache-name}}

      - name: Dependencies
        run: |
             choco install doxygen.install graphviz ninja -y
             echo "CC=${{matrix.compiler}}" >> $env:GITHUB_ENV
             echo "CXX=${{matrix.compiler}}" >> $env:GITHUB_ENV

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        working-directory: ${{runner.workspace}}/build
        run: cmake $env:GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE:STRING=${{matrix.config}}

      - name: Build
        working-directory: ${{runner.workspace}}/build
        run: cmake --build . --config ${{matrix.config}}

      - name: Test
        if: matrix.architecture != 'x64_arm64'
        working-directory: ${{runner.workspace}}/build
        run: ctest --output-on-failure -C ${{matrix.config}}

      - name: Documentation
        working-directory: ${{runner.workspace}}/build
        run: cmake --build . --target documentation
